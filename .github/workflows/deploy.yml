name: Deploy to Amazon EC2

on:
  push:
    branches: [ "dev" ]

env:
  AWS_REGION: ap-northeast-2
  CODE_DEPLOY_APPLICATION_NAME: cucumber-codedeploy-app
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: cucumber-codedeploy-deployment-group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set application.yml
      uses: microsoft/variable-substitution@v1 
      with:
        files: ./src/main/resources/application.yml 
      env:
        spring.datasource.url: ${{ secrets.SPRING_DATASOURCE_URL }} 
        spring.datasource.username: ${{ secrets.SPRING_DATASOURCE_USERNAME }} 
        spring.datasource.password: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
        
        google.client.id: ${{ secrets.GOOGLE_CLIENT_ID }}
        google.client.pw: ${{ secrets.GOOGLE_CLIENT_PW }}
        google.client.scope: ${{ secrets.GOOGLE_CLIENT_SCOPE }}
        google.client.callback-url: ${{ secrets.GOOGLE_CLIENT_CALLBACK_URL }}
        google.client.auth-url: ${{ secrets.GOOGLE_CLIENT_AUTH_URL }}
        google.client.token-request-url: ${{ secrets.GOOGLE_CLIENT_TOKEN_REQUEST_URL }}
        google.client.userinfo-request-url: ${{ secrets.GOOGLE_CLIENT_USERINFO_REQUEST_URL }}

        cloud.aws.s3.bucket: ${{ secrets.AWS_S3_BUCKET }}
        cloud.aws.s3.accessKey: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
        cloud.aws.s3.secretAccessKey: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      
    - name: Build with Gradle
      run: ./gradlew build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://${{ secrets.AWS_S3_BUCKET }}/$GITHUB_SHA.zip \
          --source .

    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},key=$GITHUB_SHA.zip,bundleType=zip
      
