/** schema 생성 */
CREATE SCHEMA cucumber;

/* SNS SNS **/
CREATE TABLE SNS(
    SNS_ID INT(11) NOT NULL COMMENT 'SNS ID' AUTO_INCREMENT PRIMARY KEY,
    SNS_NAME VARCHAR(100) COMMENT 'SNS 이름'
);

/* REGION 지역 **/
CREATE TABLE REGION(
    REGION_ID INT(11) NOT NULL COMMENT '지역 ID' AUTO_INCREMENT PRIMARY KEY,
    REGION_NAME VARCHAR(100) COMMENT '시도',
    SI VARCHAR(100) COMMENT '시군구',
    DONG VARCHAR(100) COMMENT '읍면동',
    LI VARCHAR(100) COMMENT '리',
    LATI_TUDE DECIMAL(16,14) COMMENT '위도',
    LONGI_TUDE DECIMAL(16,14) COMMENT '경도'
);

/* 회원 MEMBER **/
CREATE TABLE MEMBER(
    MEMBER_ID INT(11) NOT NULL COMMENT '멤버 ID' AUTO_INCREMENT PRIMARY KEY,
    SNS_ID INT(11) NOT NULL COMMENT 'SNS ID',
    NAME VARCHAR(100) COMMENT '이름',
    EMAIL VARCHAR(100) COMMENT '이메일',
    REGION_ID INT(11) COMMENT '지역 ID',
    FOREIGN KEY (SNS_ID) REFERENCES SNS(SNS_ID) ON UPDATE CASCADE,
    FOREIGN KEY (REGION_ID) REFERENCES REGION(REGION_ID) ON UPDATE CASCADE
);

/** 상품 상태 GOODS_STATUS */
CREATE TABLE GOODS_STATUS(
    GOODS_STATUS_ID INT(11) COMMENT '상품 상태 ID' AUTO_INCREMENT PRIMARY KEY ,
    GOODS_STATUS_NAME VARCHAR(100) COMMENT '상품 상태명'
);

INSERT INTO cucumber.goods_status
(GOODS_STATUS_NAME)
VALUES('판매중');


/** 상품 GOODS */
CREATE TABLE GOODS(
    GOODS_ID INT(11) NOT NULL COMMENT '상품 ID' AUTO_INCREMENT PRIMARY KEY,
    MEMBER_ID INT(11) NOT NULL COMMENT '멤버 ID',
    GOODS_NAME VARCHAR(100) COMMENT '상품 이름',
    GOODS_INFO VARCHAR(100) COMMENT '상품 설명',
    POST_DATE DATETIME COMMENT '게시 일자',
    UPDATE_DATE DATETIME COMMENT '수정 일자',
    PRICE INT(11) COMMENT '가격',
    VIEW_COUNT INT(11) COMMENT '조회 수',
    GOODS_STATUS_ID INT(11) DEFAULT 1 COMMENT '상태 ID',
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE,
    FOREIGN KEY (GOODS_STATUS_ID) REFERENCES GOODS_STATUS(GOODS_STATUS_ID) ON UPDATE CASCADE
);

/** 관심 LIKE */
CREATE TABLE FAVORITE(
    GOODS_ID INT(11) COMMENT '상품 ID',
    MEMBER_ID INT(11) COMMENT '멤버 ID',
    FOREIGN KEY (GOODS_ID) REFERENCES GOODS(GOODS_ID) ON DELETE CASCADE,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE
);


/** 판매자 후기 SELLER_REVIEW */
CREATE TABLE SELLER_REVIEW(
    GOODS_ID INT(11) COMMENT '상품 ID',
    REVIEW VARCHAR(100) COMMENT '후기',
    FOREIGN KEY (GOODS_ID) REFERENCES GOODS(GOODS_ID) ON DELETE CASCADE
);

/** 구매자 후기 BUYER_REVIEW */
CREATE TABLE BUYER_REVIEW(
    GOODS_ID INT(11) COMMENT '상품 ID',
    MEMBER_ID INT(11) COMMENT '멤버 ID',
    REVIEW VARCHAR(100) COMMENT '후기',
    FOREIGN KEY (GOODS_ID) REFERENCES GOODS(GOODS_ID) ON DELETE CASCADE,
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE
);